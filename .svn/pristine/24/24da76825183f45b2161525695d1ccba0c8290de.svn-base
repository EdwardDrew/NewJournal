package com.ipbase.fragment;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.kymjs.kjframe.KJHttp;
import org.kymjs.kjframe.http.HttpCallBack;
import org.kymjs.kjframe.http.HttpParams;
import org.kymjs.kjframe.ui.BindView;
import org.kymjs.kjframe.ui.ViewInject;

import com.alibaba.fastjson.JSON;
import com.ipbase.R;
import com.ipbase.adapter.PullAndRefreshAdapter;
import com.ipbase.bean.Comment;
import com.ipbase.pulltorefresh.library.PullToRefreshBase;
import com.ipbase.pulltorefresh.library.PullToRefreshBase.Mode;
import com.ipbase.pulltorefresh.library.PullToRefreshBase.OnRefreshListener2;
import com.ipbase.pulltorefresh.library.PullToRefreshListView;
import com.ipbase.thread.LoadCommentsTask;

import android.os.Bundle;
import android.text.format.DateUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;

public class LookCommentsFragment extends SimpleBackFragment
{
	private String WEB_PATH;
	private KJHttp kjh;

	private String mArticleID;

	private PullAndRefreshAdapter adapter;

	@ BindView( id = R.id.pull_refresh_list )
	private PullToRefreshListView refreshListview;

	@ Override
	protected View inflaterView( LayoutInflater layoutInflater,
			ViewGroup viewGroup, Bundle bundle )
	{
		return View.inflate( outsideAty, R.layout.fragment_look_comments, null );
	}

	@ Override
	protected void initData()
	{
		super.initData();

		WEB_PATH = getString( R.string.url_base ) + "/comments/";
		kjh = new KJHttp();

		String temp = null;
		temp = getArguments().getString( "ArticleID" );
		if ( temp != null && !temp.equals( "" ) )
		{
			mArticleID = temp;
		}
		else
		{
			mArticleID = "";
		}
	}

	@ Override
	protected void initWidget( View parentView )
	{
		super.initWidget( parentView );
		setTitle( "所有评论" );

		loadCommentListData();
		refreshListview.setMode( Mode.BOTH );
		initListener();
	}

	private void loadCommentListData()
	{
		HttpParams params = new HttpParams();
		Comment comment = new Comment();
		comment.setComment_id( mArticleID );
		params.putJsonParams( JSON.toJSONString( comment ) );

		kjh.get( WEB_PATH, params, false, new HttpCallBack()
		{
			public void onSuccess( String info )
			{
				Log.e( "xinyiTag", info );
				doBindAdapterView( info );
			};

			public void onFailure( int errorNo, String strMsg )
			{
				Log.e( "xinyiTag 获取文章评论失败", "错误码：" + errorNo + " ,错误信息："
						+ strMsg );
			};

			public void onFinish()
			{
			};
		} );
	}

	private void doBindAdapterView( String info )
	{
		ArrayList< Comment > commentLists = new ArrayList< Comment >();

		try
		{
			JSONObject jsonObject = new JSONObject( info );
			JSONArray jsonArray = jsonObject.getJSONArray( "comments" );

			int size = jsonArray.length();
			for ( int i = 0; i < size; i++ )
			{
				Comment comment = new Comment();
				JSONObject jsonComment = jsonArray.getJSONObject( i );

				comment.setId( jsonComment.getString( "id" ) );
				comment.setUser_id( jsonComment.getString( "user_id" ) );
				comment.setComment_id( jsonComment.getString( "comment_id" ) );
				comment.setContent( jsonComment.getString( "content" ) );
				comment.setType( jsonComment.getInt( "type" ) );
				comment.setCreatetime( jsonComment.getString( "createtime" ) );

				commentLists.add( comment );
			}

			adapter = new PullAndRefreshAdapter( outsideAty, commentLists );
			refreshListview.setAdapter( adapter );
		}
		catch ( JSONException e )
		{
			e.printStackTrace();
		}
	}

	private void initListener()
	{
		refreshListview
				.setOnRefreshListener( new OnRefreshListener2< ListView >()
				{
					// 下拉刷新
					@ Override
					public void onPullDownToRefresh(
							PullToRefreshBase< ListView > refreshView )
					{
						// ViewInject.toast( "下拉刷新..." );
						// 获取当前时间
						String label = DateUtils.formatDateTime( outsideAty,
								System.currentTimeMillis(),
								DateUtils.FORMAT_SHOW_TIME
										| DateUtils.FORMAT_SHOW_DATE
										| DateUtils.FORMAT_ABBREV_ALL );

						// 更新上一次刷新的时间
						refreshView.getLoadingLayoutProxy()
								.setLastUpdatedLabel( label );

						LoadCommentsTask task = new LoadCommentsTask( kjh,
								WEB_PATH, mArticleID, refreshListview );
						task.execute( adapter );
					}

					// 上拉加载
					@ Override
					public void onPullUpToRefresh(
							PullToRefreshBase< ListView > refreshView )
					{
						ViewInject.toast( "上拉加载..." );
						refreshListview.onRefreshComplete();
					}

				} );
	}

	@ Override
	protected void widgetClick( View view )
	{
		super.widgetClick( view );
	}

};