package com.ipbase.fragment;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.kymjs.kjframe.ui.BindView;

import android.content.SharedPreferences;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

import com.ipbase.R;
import com.ipbase.adapter.SearchAutoAdapter;
import com.ipbase.bean.FragmentPages;
import com.ipbase.ui.SimpleBackActivity;

/**
 * 搜索页面
 * @author 李先华
 *2015年10月28日上午12:44:30
 */
public class SearchFragment extends SimpleBackFragment implements TextWatcher
{
	public static final String SEARCH_HISTORY = "search_history";

	//这里不能用KJFrame绑定控件id
	private EditText mEitSearch;
	private ImageView mIvSearch;
	private ImageView mIvDeleteText;

	@BindView( id = R.id.lv_search_history )
	private ListView mLvSearchHistory;

	@BindView( id = R.id.tv_silu, click = true)
	private TextView mTvSiLu;

	@BindView( id = R.id.tv_mingyi, click = true)
	private TextView mTvMingYi;

	@BindView( id = R.id.tv_linchuang, click = true)
	private TextView mTvLinChuang;

	@BindView( id = R.id.tv_zhenjiu, click = true)
	private TextView mTvZhenJiu;

	@BindView( id = R.id.tv_shiyan, click = true)
	private TextView mTvShiYan;

	@BindView( id = R.id.tv_wenxian, click = true)
	private TextView mTvWenXian;

	@BindView( id = R.id.tv_huli, click = true)
	private TextView mTvHuLi;

	@BindView( id = R.id.tv_yian, click = true)
	private TextView mTvYiAn;

	//分类搜索TextView集合
	private List<View> mLsClassifyTextView;

	private SearchAutoAdapter mSearchAutoAdapter;

	@ Override
	protected View inflaterView( LayoutInflater layoutInflater,
			ViewGroup viewGroup, Bundle bundle )
	{
		return View.inflate( outsideAty, R.layout.fragment_search, null );
	}

	@ Override
	protected void initWidget( View parentView )
	{
		super.initWidget( parentView );
		//隐藏原来标题栏，显示搜索标题栏
		setRLVisible(View.GONE);
		setRLSearchVisible(View.VISIBLE);
		findViewById();
		// 初始化EditText的监听器
		initTextChangedListener();
	}

	private void findViewById() {
		mEitSearch = (EditText) outsideAty.findViewById(R.id.et_search);

		mIvSearch = (ImageView) outsideAty.findViewById(R.id.iv_search);

		mIvDeleteText = (ImageView) outsideAty.findViewById(R.id.iv_delete_text);

		mIvDeleteText.setOnClickListener(this);
		mIvSearch.setOnClickListener(this);

	}

	private void initTextChangedListener() {
		mEitSearch.addTextChangedListener(this);
	}

	@Override
	protected void initData() {
		// TODO Auto-generated method stub
		super.initData();

		init();

		mLsClassifyTextView = new ArrayList<View>();
		mLsClassifyTextView.add(mTvSiLu);
		mLsClassifyTextView.add(mTvMingYi);
		mLsClassifyTextView.add(mTvLinChuang);
		mLsClassifyTextView.add(mTvZhenJiu);
		mLsClassifyTextView.add(mTvShiYan);
		mLsClassifyTextView.add(mTvWenXian);
		mLsClassifyTextView.add(mTvHuLi);
		mLsClassifyTextView.add(mTvYiAn);		
	}

	private void init() {
		mSearchAutoAdapter = new SearchAutoAdapter(outsideAty, 5);
		mLvSearchHistory.setAdapter(mSearchAutoAdapter);
		mLvSearchHistory.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View view, int position,
					long arg3) {
				String data = (String) mSearchAutoAdapter.getItem(position);
				mEitSearch.setText(data);
//				mIvSearch.performClick();
			}
		});

	}

	@ Override
	protected void widgetClick( View view )
	{
		switch ( view.getId() )
		{
		case R.id.iv_search :
			saveSearchHistory();
			mSearchAutoAdapter.initSearchHistory();
//			Toast.makeText(outsideAty, "点击搜索成功", Toast.LENGTH_LONG).show();
			SimpleBackActivity.postShowWith(outsideAty, FragmentPages.SearchResult_Page);
			break;
		case R.id.iv_delete_text :
			mEitSearch.setText("");
			break;
		case R.id.tv_silu :
			for (int i = 0; i < mLsClassifyTextView.size(); i++) 
			{
				if (mTvSiLu.equals(mLsClassifyTextView.get(i))) 
				{
					mTvSiLu.setSelected(true);
				}
				else 
				{
					mLsClassifyTextView.get(i).setSelected(false);
				}
			}
			break;
		case R.id.tv_mingyi :
			for (int i = 0; i < mLsClassifyTextView.size(); i++) 
			{
				if (mTvMingYi.equals(mLsClassifyTextView.get(i))) 
				{
					mTvMingYi.setSelected(true);
				}
				else 
				{
					mLsClassifyTextView.get(i).setSelected(false);
				}
			}
			break;
		case R.id.tv_linchuang :
			for (int i = 0; i < mLsClassifyTextView.size(); i++) 
			{
				if (mTvLinChuang.equals(mLsClassifyTextView.get(i))) 
				{
					mTvLinChuang.setSelected(true);
				}
				else 
				{
					mLsClassifyTextView.get(i).setSelected(false);
				}
			}
			break;
		case R.id.tv_zhenjiu :
			for (int i = 0; i < mLsClassifyTextView.size(); i++) 
			{
				if (mTvZhenJiu.equals(mLsClassifyTextView.get(i))) 
				{
					mTvZhenJiu.setSelected(true);
				}
				else 
				{
					mLsClassifyTextView.get(i).setSelected(false);
				}
			}
			break;
		case R.id.tv_shiyan :
			for (int i = 0; i < mLsClassifyTextView.size(); i++) 
			{
				if (mTvShiYan.equals(mLsClassifyTextView.get(i))) 
				{
					mTvShiYan.setSelected(true);
				}
				else 
				{
					mLsClassifyTextView.get(i).setSelected(false);
				}
			}
			break;
		case R.id.tv_wenxian :
			for (int i = 0; i < mLsClassifyTextView.size(); i++) 
			{
				if (mTvWenXian.equals(mLsClassifyTextView.get(i))) 
				{
					mTvWenXian.setSelected(true);
				}
				else 
				{
					mLsClassifyTextView.get(i).setSelected(false);
				}
			}
			break;
		case R.id.tv_huli :
			for (int i = 0; i < mLsClassifyTextView.size(); i++) 
			{
				if (mTvHuLi.equals(mLsClassifyTextView.get(i))) 
				{
					mTvHuLi.setSelected(true);
				}
				else 
				{
					mLsClassifyTextView.get(i).setSelected(false);
				}
			}
			break;
		case R.id.tv_yian :
			for (int i = 0; i < mLsClassifyTextView.size(); i++) 
			{
				if (mTvYiAn.equals(mLsClassifyTextView.get(i))) 
				{
					mTvYiAn.setSelected(true);
				}
				else 
				{
					mLsClassifyTextView.get(i).setSelected(false);
				}
			}
			break;
		default :
			break;
		}
		super.widgetClick( view );
	}

	/*
	 * 保存搜索记录
	 */
	private void saveSearchHistory() {
		String text = mEitSearch.getText().toString().trim();
		if (text.length() < 1) 
		{
			return;
		}
		SharedPreferences sp = outsideAty.getSharedPreferences(SEARCH_HISTORY, 0);
		String longhistory = sp.getString(SEARCH_HISTORY, "");
		String[] tmpHistory  = longhistory.split(",");
		ArrayList<String> history = new ArrayList<String>(
				Arrays.asList(tmpHistory));
		//检查历史记录是否已经存在当前输入的text，如果存在则删除
		if (history.size() > 0) 
		{
			int i;
			for (i = 0; i < history.size(); i++) 
			{
				if (text.equals(history.get(i))) 
				{
					history.remove(i);
					break;
				}
			}
			//如果记录大于4个，则移除最后一个数据再在最前面增加一个数据
			if (history.size() > 4) {
				history.remove(history.size()-1);
			}
			history.add(0, text);
		}

		//重新加，提交
		if (history.size() > 0) //history.size()>1和history.size()>0一样
		{
			StringBuilder sb = new StringBuilder();
			for (int i = 0; i < history.size(); i++) 
			{
				sb.append(history.get(i) + ",");//这句一开始添加一个数据时加了两个,	why？ 用String也是 因为""
			}
			sp.edit().putString(SEARCH_HISTORY, sb.toString()).commit();
		} 
		else 
		{
			sp.edit().putString(SEARCH_HISTORY, text + ",").commit();
		}
	}

	@Override
	public void beforeTextChanged(CharSequence s, int start, int count,
			int after) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onTextChanged(CharSequence s, int start, int before, int count) {
		mSearchAutoAdapter.performFiltering(s);
	}

	@Override
	public void afterTextChanged(Editable s) {
		if (s.length() == 0) {
			mIvDeleteText.setVisibility(View.GONE);
		} else {
			mIvDeleteText.setVisibility(View.VISIBLE);
		}
	}

};